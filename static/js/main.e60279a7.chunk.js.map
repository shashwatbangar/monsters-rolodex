{"version":3,"sources":["components/Cardlists/Cardlists.jsx","components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cardlist","props","className","monsters","map","monster","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchFiled","fetch","then","response","json","users","setState","this","filteredMonsters","filter","name","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAoBeA,G,YAhBS,SAAAC,GAAK,OAE5B,qBAAKC,UAAU,YAAf,SAESD,EAAME,SAASC,KAAI,SAAAC,GACNA,EAAQC,UCMhBC,G,YAZG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACA,uBACAP,UAAU,SACVQ,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCCG,E,kDA1Cb,aAAc,IAAD,8BACb,gBAGKC,MAAQ,CACXV,SAAW,GACXW,YAAY,IAND,E,gEAWM,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACjB,SAASgB,S,+BAIhC,IAAD,SACyBE,KAAKR,MAA9BV,EADA,EACAA,SAAUW,EADV,EACUA,YACXQ,EAAmBnB,EAASoB,QAAO,SAAAlB,GACvCA,EAAQmB,KAAKC,cAAcC,SAASZ,EAAYW,kBAIlD,OACE,sBAAKvB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAM,YAAY,iBACZC,aAAc,SAAAkB,GAAC,OACb,EAAKP,SAAS,CAACN,YAAca,EAAEC,OAAOC,WACxC,cAAC,EAAD,CAAU1B,SAAUmB,W,GAjCRQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e60279a7.chunk.js","sourcesContent":["import React from 'react'\nimport \"/Users/shashwatbangar/Desktop/ztm/monster-app/monsters-rolodex/src/components/Cardlists/Cardlists.css\"\nimport Card from \"../Card/Card.jsx\"\n\nexport const Cardlist = props => (\n    \n <div className=\"cardLists\">\n    \n        { props.monsters.map(monster => {\n            <Card key={monster.id} monster={monster} />\n            }\n        ) \n    } \n</div>\n\n);\n\n\n\n\nexport default Cardlist;\n","import React from 'react'\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({placeholder, handleChange}) => {\n    return (\n    <input \n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n    />\n    )\n}\n\n\nexport default SearchBox\n\n","import Cardlist from \"./components/Cardlists/Cardlists.jsx\"\nimport './App.css';\nimport { Component } from 'react';\nimport { render } from 'react-dom';\nimport SearchBox from \"./components/SearchBox/SearchBox\"\n\nclass App extends Component{\n  constructor(){\n  super();\n\n\n  this.state = {\n    monsters : [],\n    searchFiled:\"\"\n  }\n\n };\n\n componentDidMount(){\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setState({monsters:users}))\n }\n\n\nrender() {\n  const {monsters, searchFiled} = this.state;\n  const filteredMonsters = monsters.filter(monster => {\n    monster.name.toLowerCase().includes(searchFiled.toLowerCase())\n  })\n\n\n  return ( \n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n      placeholder=\"Seach monsters\"\n      handleChange={e => \n        this.setState({searchFiled : e.target.value})} />\n      <Cardlist monsters={filteredMonsters} />\n     \n    </div>\n  )\n\n    }\n  }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}